package com.toaok.study.module.base.view;import android.support.v7.widget.Toolbar;import android.view.View;import android.widget.ImageButton;import android.widget.TextView;import com.toaok.study.R;import com.toaok.study.base.view.BaseDelegate;/** * BaseToolbarDelegate 所有在该项目中使用TheMVP框架的BaseToolbarDelegate都必须继承该抽象类 * * @author Toaok * @version 1.0  2018/9/26. */public class BaseToolbarDelegate extends BaseDelegate implements View.OnClickListener {    private ImageButton leftImageButton;    private TextView titleTextView;    private TextView rightTextView;    private ImageButton rightImageButton;    private OnClickToolBarListener mToolBarListener;    @Override    public int getRootLayoutId() {        return R.layout.activity_fragment;    }    @Override    public Toolbar getToolbar() {        return rootView.findViewById(R.id.toolbar);    }    @Override    public void initWidget() {        super.initWidget();        leftImageButton = get(R.id.btn_left);        titleTextView = get(R.id.text_title);        rightTextView = get(R.id.text_right);        rightImageButton = get(R.id.btn_right);    }    public void setToolBarListener(OnClickToolBarListener toolBarListener) {        mToolBarListener = toolBarListener;        setOnClickToolbarListener(this, R.id.btn_left, R.id.text_right, R.id.btn_right);    }    protected void setOnClickToolbarListener(View.OnClickListener listener, int... ids) {        if (ids == null) {            return;        }        for (int id : ids) {            rootView.findViewById(id).setOnClickListener(listener);        }    }    @Override    public void onClick(View v) {        switch (v.getId()) {            case R.id.btn_left:                mToolBarListener.onClickLeftButton();                break;            case R.id.text_right:                mToolBarListener.onClickRightText();                break;            case R.id.btn_right:                mToolBarListener.onClickRightButton();                break;        }    }    public interface OnClickToolBarListener {        void onClickLeftButton();        void onClickRightButton();        void onClickRightText();    }    public ImageButton getLeftImageButton() {        leftImageButton.setVisibility(View.VISIBLE);        return leftImageButton;    }    public TextView getTitleTextView() {        titleTextView.setVisibility(View.VISIBLE);        return titleTextView;    }    public TextView getRightTextView() {        rightTextView.setVisibility(View.VISIBLE);        return rightTextView;    }    public ImageButton getRightImageButton() {        rightImageButton.setVisibility(View.VISIBLE);        return rightImageButton;    }}