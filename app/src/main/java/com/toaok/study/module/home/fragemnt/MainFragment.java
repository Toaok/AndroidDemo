package com.toaok.study.module.home.fragemnt;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentStatePagerAdapter;import android.view.View;import com.toaok.study.R;import com.toaok.study.base.presenter.fragment.BaseFragment;import com.toaok.study.module.home.databinder.MainDataBinder;import com.toaok.study.module.home.view.MainDelegate;import com.toaok.study.module.other.fragment.OtherFragment;import com.toaok.themvp.databind.DataBinder;import java.util.ArrayList;import java.util.List;import static com.toaok.study.module.home.view.MainDelegate.KLINE_PAGER;import static com.toaok.study.module.home.view.MainDelegate.MAP_PAGER;import static com.toaok.study.module.home.view.MainDelegate.OTHER_PAGER;/** * 主界面 */public class MainFragment extends BaseFragment<MainDelegate> implements View.OnClickListener {    public static MainFragment newInstance(String desc) {        MainFragment fragment = new MainFragment();        Bundle bundle = new Bundle();        bundle.putString("desc", desc);        fragment.setArguments(bundle);        return fragment;    }    @Override    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        initData();    }    private void initData() {        Fragment mapFragment = OtherFragment.newInstance("map");        Fragment klineFragment = OtherFragment.newInstance("kline");        Fragment otherFragment = OtherFragment.newInstance("other");        final List<Fragment> fragmentList = new ArrayList<>();        fragmentList.add(mapFragment);        fragmentList.add(klineFragment);        fragmentList.add(otherFragment);        /**         * 在子fragment中获取FragmentManager应该使用{@link this#getChildFragmentManager()}         */        viewDelegate.setViewPagerAdapter(new FragmentStatePagerAdapter(getChildFragmentManager()) {            @Override            public Fragment getItem(int position) {                return fragmentList.get(position);            }            @Override            public int getCount() {                return fragmentList.size();            }        });        /*         * 设置viewPager缓存数量，不然会造成内存泄漏。         * 内存泄漏原因：         * ViewPager会帮我们管理Fragment,默认缓存当前页面的前一页和后一页，当页面数》=3时就很容易发生内存泄漏         * 若不设置ViewPager缓存页数         * 在页面切换到最后一页时会ViewPager删掉当前页面的前一页之前的页面，但是list中又一直持有Fragment的实例，导致该fragment不能被销毁         * 当页面再次切换时，被删掉的页面又从List中重新加入了ViewPager的管理队列，如此反复就造成了内存的大量泄漏。         * */        viewDelegate.setOffscreenPageLimit(2);        viewDelegate.setTabBackground(MAP_PAGER);        if (getActivity() != null)            ((SelectTab) getActivity()).selected(MAP_PAGER);    }    @Override    protected void bindEvenListener() {        super.bindEvenListener();        viewDelegate.setOnClickListener(this, R.id.btn_map, R.id.btn_kline, R.id.btn_other);    }    /**     * @return 视图层对象的字节码     */    @Override    protected Class<MainDelegate> getDelegateClass() {        return MainDelegate.class;    }    @Override    public DataBinder getDataBinder() {        return new MainDataBinder();    }    @Override    public void onClick(View v) {        switch (v.getId()) {            case R.id.btn_map:                viewDelegate.setTabBackground(MAP_PAGER);                if (getActivity() != null)                    ((SelectTab) getActivity()).selected(MAP_PAGER);                break;            case R.id.btn_kline:                viewDelegate.setTabBackground(KLINE_PAGER);                if (getActivity() != null)                    ((SelectTab) getActivity()).selected(KLINE_PAGER);                break;            case R.id.btn_other:                viewDelegate.setTabBackground(OTHER_PAGER);                if (getActivity() != null)                    ((SelectTab) getActivity()).selected(OTHER_PAGER);                break;        }    }    /**     * 切换Fragment时更改ToolbarTitle     */    public interface SelectTab {        void selected(int tabId);    }    @Override    public void onDestroy() {        super.onDestroy();    }}