package indi.toaok.androiddemo.module.home.fragemnt;import android.os.Bundle;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.fragment.app.Fragment;import androidx.fragment.app.FragmentStatePagerAdapter;import android.view.View;import indi.toaok.androiddemo.R;import indi.toaok.androiddemo.module.home.databinder.MainDataBinder;import indi.toaok.androiddemo.module.other.fragment.OtherFragment;import indi.toaok.themvp.databind.DataBinder;import java.util.ArrayList;import java.util.List;import indi.toaok.androiddemo.base.presenter.fragment.BaseFragment;import indi.toaok.androiddemo.module.home.view.FMainDelegate;import indi.toaok.androiddemo.module.map.fragment.MapFragment;import static indi.toaok.androiddemo.common.animation.Animation.PAGER_KLINE;import static indi.toaok.androiddemo.common.animation.Animation.PAGER_MAP;import static indi.toaok.androiddemo.common.animation.Animation.PAGER_OTHER;/** * 主界面 */public class MainFragment extends BaseFragment<FMainDelegate> implements View.OnClickListener {    private static final String TAG = "indi.toaok.androiddemo.module.home.fragemnt.MainFragment";    public static MainFragment newInstance(String desc) {        MainFragment fragment = new MainFragment();        Bundle bundle = new Bundle();        bundle.putString(TAG, desc);        fragment.setArguments(bundle);        return fragment;    }    @Override    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        initData();    }    final List<Fragment> fragmentList = new ArrayList<>();    /**     * 初始化数据     */    private void initData() {        Fragment mapFragment = MapFragment.newInstance("map");        Fragment klineFragment = OtherFragment.newInstance("");        Fragment otherFragment = OtherFragment.newInstance("");        fragmentList.add(mapFragment);        fragmentList.add(klineFragment);        fragmentList.add(otherFragment);        /*          在子fragment中获取FragmentManager应该使用{@link this#getChildFragmentManager()}         */        viewDelegate.setViewPagerAdapter(new FragmentStatePagerAdapter(getChildFragmentManager()) {                    @Override                    public Fragment getItem(int position) {                        return fragmentList.get(position);                    }                    @Override                    public int getCount() {                        return fragmentList.size();                    }                });        /*         * 设置viewPager缓存数量，不然会造成内存泄漏。         * 内存泄漏原因：         * ViewPager会帮我们管理Fragment,默认缓存当前页面的前一页和后一页，当页面数》=3时就很容易发生内存泄漏         * 若不设置ViewPager缓存页数         * 在页面切换到最后一页时会ViewPager删掉当前页面的前一页之前的页面，但是list中又一直持有Fragment的实例，导致该fragment不能被销毁         * 当页面再次切换时，被删掉的页面又从List中重新加入了ViewPager的管理队列，如此反复就造成了内存的大量泄漏。         * */        viewDelegate.setOffscreenPageLimit(2);        viewDelegate.setTabBackground(PAGER_OTHER);    }    @Override    protected void bindEvenListener() {        super.bindEvenListener();        viewDelegate.setOnClickListener(this, R.id.btn_map, R.id.btn_kline, R.id.btn_other);    }    /**     * @return 视图层对象的字节码     */    @Override    protected Class<FMainDelegate> getDelegateClass() {        return FMainDelegate.class;    }    @Override    public DataBinder getDataBinder() {        return new MainDataBinder();    }    @Override    public void onClick(View v) {        switch (v.getId()) {            case R.id.btn_map:                viewDelegate.setTabBackground(PAGER_MAP);                break;            case R.id.btn_kline:                viewDelegate.setTabBackground(PAGER_KLINE);                break;            case R.id.btn_other:                viewDelegate.setTabBackground(PAGER_OTHER);                break;        }    }}