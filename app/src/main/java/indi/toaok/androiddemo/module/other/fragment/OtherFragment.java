package indi.toaok.androiddemo.module.other.fragment;import android.Manifest;import android.os.Bundle;import android.os.Environment;import android.view.View;import android.widget.Button;import com.tbruyelle.rxpermissions2.RxPermissions;import java.io.File;import java.lang.ref.WeakReference;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import indi.toaok.androiddemo.Config;import indi.toaok.androiddemo.R;import indi.toaok.androiddemo.base.presenter.fragment.BaseFragment;import indi.toaok.androiddemo.module.base.recyclerview.BaseRecyclerAdapter;import indi.toaok.androiddemo.module.other.activity.WebActivity;import indi.toaok.androiddemo.module.other.bean.OtherListBean;import indi.toaok.androiddemo.module.other.databinder.OtherListDataBinder;import indi.toaok.androiddemo.module.other.view.OtherDelegate;import indi.toaok.androiddemo.module.rxandroid.activity.RxOperatorsActivity;import indi.toaok.androiddemo.utils.AppUtil;import indi.toaok.androiddemo.utils.PermissionUtils;import indi.toaok.themvp.databind.DataBinder;public class OtherFragment extends BaseFragment<OtherDelegate> {    private static final String TAG = "indi.toaok.androiddemo.module.other.fragment.OtherFragment";    private RxPermissions mRxPermissions;    private OtherListBean mOtherListBean;    public static OtherFragment newInstance(String desc) {        OtherFragment fragment = new OtherFragment();        Bundle bundle = new Bundle();        bundle.putString(TAG, desc);        fragment.setArguments(bundle);        return fragment;    }    @Override    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        init();    }    private void init() {        /**         * 初始化权限请求对象         */        if (mRxPermissions == null) {            mRxPermissions = new RxPermissions(new WeakReference<>(this).get());        }        String[] otherItems = getResources().getStringArray(R.array.other_item);        mOtherListBean = new OtherListBean(otherItems, (view, position) -> {            switch (otherItems[position]) {                case "WebView":                    WebActivity.startActivity(getActivity(), Config.BAIDU, getString(R.string.title_baidu_text), true, false);                    break;                case "Call Phone":                    mRxPermissions                            .request(Manifest.permission.CALL_PHONE)                            .subscribe(granted -> {                                if (isAdded() && getContext() != null) {                                    if (granted) {                                        AppUtil.callPhone(getContext(), "12345678910");                                    } else {                                        PermissionUtils.showPermissionDialog(getContext(), R.string.permission_call_phone);                                    }                                }                            });                    break;                case "Install Other Apk":                    mRxPermissions                            .request(Manifest.permission.READ_EXTERNAL_STORAGE,                                    Manifest.permission.WRITE_EXTERNAL_STORAGE)                            .subscribe(granted -> {                                if (isAdded() && getContext() != null) {                                    if (granted) {                                        File file = new File(Environment.getExternalStorageDirectory(), "update.apk");                                        if (file.exists()) {                                            AppUtil.installApk(getContext(), file);                                        } else {                                            viewDelegate.toast(R.string.toast_apk_not_exist);                                        }                                    } else {                                        PermissionUtils.showPermissionDialog(getContext(), R.string.permission_storage);                                    }                                }                            });                    break;                case "RxAndroid":                    RxOperatorsActivity.startActivity(getActivity());                    break;            }        });        notifyModelChanged(mOtherListBean);    }    @Override    protected Class<OtherDelegate> getDelegateClass() {        return OtherDelegate.class;    }    @Override    protected DataBinder getDataBinder() {        return new OtherListDataBinder();    }}